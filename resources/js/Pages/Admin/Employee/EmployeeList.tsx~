import React, { useEffect, useState } from 'react';
import axios from 'axios';
import EditCompany from "@/Pages/Admin/Company/EditCompany";
import { Company } from "@/types";

const CompanyList: React.FC = (): React.ReactNode => {
    const [companies, setCompanies] = useState<Company[]>([]);
    const [loading, setLoading] = useState(true);
    const [error, setError] = useState<string | null>(null);
    const [editingCompany, setEditingCompany] = useState<Company | null>(null);
    const [modalOpen, setModalOpen] = useState(false);

    useEffect(() => {
        setLoading(true);
        axios.get('admin/companies')
            .then(response => {
                setCompanies(response.data);
                setLoading(false);
            })
            .catch((error) => {
                setError('Error al cargar los datos');
                setLoading(false);
            });
    }, []);

    const handleEditClick = (company: Company) => {
        setEditingCompany(company);
        setModalOpen(true);
    };

    const handleDeleteClick = (company: Company) => {
        alert(`Funcionalidad de eliminación para ${company.name} está pendiente.`);
    };

    const refreshCompanies = () => {
        axios.get('admin/companies')
            .then(response => setCompanies(response.data))
            .catch(error => console.error('Error al actualizar la lista de empresas', error));
    };

    if (loading) {
        return (
            <div className="flex justify-center items-center h-screen bg-base-100">
                <span className="loading loading-dots loading-lg text-primary"></span>
            </div>
        );
    }

    if (error) {
        return <div className="text-center text-error">{error}</div>;
    }

    return (
        <div className="container mx-auto px-4 py-8 bg-base-100">
            <h2 className="text-3xl font-bold mb-6 text-center text-primary">Lista de Empresas</h2>
            <div className="overflow-x-auto">
                <table className="table w-full">
                    <thead>
                    <tr className="text-primary-content">
                        <th className="px-4 py-2 text-left">Nombre de la Empresa</th>
                        <th className="px-4 py-2 text-left">Cantidad de Empleados</th>
                        <th className="px-4 py-2 text-left">Acciones</th>
                    </tr>
                    </thead>
                    <tbody>
                    {companies.map(company => (
                        <tr key={company.id} className="hover:bg-base-200">
                            <td className="border px-4 py-2 text-sm text-base-content truncate">
                                {company.name}
                            </td>
                            <td className="border px-4 py-2 text-sm text-base-content">
                                {company.employees_count ?? 0}
                            </td>
                            <td className="border px-4 py-2 text-sm text-base-content">
                                <div className="flex justify-center space-x-2">
                                    <button
                                        onClick={() => handleEditClick(company)}
                                        className="btn btn-primary btn-sm"
                                    >
                                        Editar
                                    </button>
                                    <button
                                        onClick={() => handleDeleteClick(company)}
                                        className="btn btn-error btn-sm text-base-100"
                                    >
                                        Eliminar
                                    </button>
                                </div>
                            </td>
                        </tr>
                    ))}
                    </tbody>
                </table>

                {modalOpen && editingCompany && (
                    <EditCompany
                        company={editingCompany}
                        onClose={() => {
                            setModalOpen(false);
                            refreshCompanies(); // Refresca la lista después de editar
                        }}
                    />
                )}
            </div>
        </div>
    );
};

export default CompanyList;
